/* ------------------- */
/* Custom properties   */
/* ------------------- */
* {
  --orange: hsl(26, 100%, 55%);
  --pale-orange: hsl(25, 100%, 94%);
  --dark-blue: hsl(220, 13%, 13%);
  --dark-grayish-blue: hsl(219, 9%, 45%);
  --grayish-blue: hsl(220, 14%, 75%);
  --light-grayish-blue: hsl(223, 64%, 98%);
  --white: hsl(0, 0%, 100%);
  /* brand foundation */
  --brand-hue: 26;
  --brand-saturation: 100%;
  --brand-lightness: 55%;

  /* light */
  --brand-light: hsl(
    var(--brand-hue) var(--brand-saturation) var(--brand-lightness)
  );
  --text1-light: hsl(var(--brand-hue) var(--brand-saturation) 10%);
  --text2-light: hsl(var(--brand-hue) 30% 30%);
  --surface1-light: hsl(var(--brand-hue) 25% 90%);
  --surface2-light: hsl(var(--brand-hue) 20% 99%);
  --surface3-light: hsl(var(--brand-hue) 20% 92%);
  --surface4-light: hsl(var(--brand-hue) 20% 85%);
  --surface-shadow-light: var(--brand-hue) 10% 20%;
  --shadow-strength-light: 0.02;

  /* dark */
  --brand-dark: hsl(
    var(--brand-hue) calc(var(--brand-saturation) / 2)
      calc(var(--brand-lightness) / 1.5)
  );
  --text1-dark: hsl(var(--brand-hue) 15% 85%);
  --text2-dark: hsl(var(--brand-hue) 5% 65%);
  --surface1-dark: hsl(var(--brand-hue) 10% 10%);
  --surface2-dark: hsl(var(--brand-hue) 10% 15%);
  --surface3-dark: hsl(var(--brand-hue) 5% 20%);
  --surface4-dark: hsl(var(--brand-hue) 5% 25%);
  --surface-shadow-dark: var(--brand-hue) 50% 3%;
  --shadow-strength-dark: 0.8;

  /* dim */
  --brand-dim: hsl(
    var(--brand-hue) calc(var(--brand-saturation) / 1.25)
      calc(var(--brand-lightness) / 1.25)
  );
  --text1-dim: hsl(var(--brand-hue) 15% 75%);
  --text2-dim: hsl(var(--brand-hue) 10% 61%);
  --surface1-dim: hsl(var(--brand-hue) 10% 20%);
  --surface2-dim: hsl(var(--brand-hue) 10% 25%);
  --surface3-dim: hsl(var(--brand-hue) 5% 30%);
  --surface4-dim: hsl(var(--brand-hue) 5% 35%);
  --surface-shadow-dim: var(--brand-hue) 30% 13%;
  --shadow-strength-dim: 0.2;
}

:root {
  /* colors */
  color-scheme: light;

  /* set defaults */
  --brand: var(--brand-light);
  --text1: var(--text1-light);
  --text2: var(--text2-light);
  --surface1: var(--surface1-light);
  --surface2: var(--surface2-light);
  --surface3: var(--surface3-light);
  --surface4: var(--surface4-light);
  --surface-shadow: var(--surface-shadow-light);
  --shadow-strength: var(--shadow-strength-light);

  /* font-sizes */
  --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 1.5rem;
  --fs-600: 1rem;
  --fs-500: 1rem;
  --fs-400: 0.9375rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Playfair Display", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Roboto", sans-serif;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    --brand: var(--brand-dark);
    --text1: var(--text1-dark);
    --text2: var(--text2-dark);
    --surface1: var(--surface1-dark);
    --surface2: var(--surface2-dark);
    --surface3: var(--surface3-dark);
    --surface4: var(--surface4-dark);
    --surface-shadow: var(--surface-shadow-dark);
    --shadow-strength: var(--shadow-strength-dark);
  }
}

[color-scheme="light"] {
  color-scheme: light;

  --brand: var(--brand-light);
  --text1: var(--text1-light);
  --text2: var(--text2-light);
  --surface1: var(--surface1-light);
  --surface2: var(--surface2-light);
  --surface3: var(--surface3-light);
  --surface4: var(--surface4-light);
  --surface-shadow: var(--surface-shadow-light);
  --shadow-strength: var(--shadow-strength-light);
}

[color-scheme="dark"] {
  color-scheme: dark;

  --brand: var(--brand-dark);
  --text1: var(--text1-dark);
  --text2: var(--text2-dark);
  --surface1: var(--surface1-dark);
  --surface2: var(--surface2-dark);
  --surface3: var(--surface3-dark);
  --surface4: var(--surface4-dark);
  --surface-shadow: var(--surface-shadow-dark);
  --shadow-strength: var(--shadow-strength-dark);
}

[color-scheme="dim"] {
  color-scheme: dark;

  --brand: var(--brand-dim);
  --text1: var(--text1-dim);
  --text2: var(--text2-dim);
  --surface1: var(--surface1-dim);
  --surface2: var(--surface2-dim);
  --surface3: var(--surface3-dim);
  --surface4: var(--surface4-dim);
  --surface-shadow: var(--surface-shadow-dim);
  --shadow-strength: var(--shadow-strength-dim);
}

@media (min-width: 35em) {
  :root {
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-500: 1.25rem;
    --fs-400: 1rem;
  }
}

@media (min-width: 45em) {
  :root {
    /* font-sizes */
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-500: 1.75rem;
    --fs-400: 1.125rem;
  }
}

/* ------------------- */
/* CSS Reset   */
/* ------------------- */
html {
  block-size: 100%;
  background-color: var(--surface1);
  color: var(--text1);
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-block-size: 100%;
  font-family: "Kumbh Sans", sans-serif;
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------- */
/* Utility classes     */
/* ------------------- */

/* general */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.flow--space-small {
  --flow-space: 0.75rem;
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.skip-to-content {
  position: absolute;
  z-index: 9999;
  background: hsl(var(--clr-white));
  color: hsl(var(--clr-dark));
  padding: 0.5em 1em;
  margin-inline: auto;
  transform: translateY(-100%);
  transition: transform 250ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}

/* typography */

.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

/* ############################################################################# */

.main-header {
  padding: 1.5rem 1rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.hamburger {
  display: block;
  z-index: 2000;

  border: 0;
  background: transparent; /* or 0 or none */
  background-image: url("./images/icon-menu.svg");
  background-repeat: no-repeat;
  background-position: center;
  width: 1.5rem;
  aspect-ratio: 1;
  cursor: pointer;
}

.hamburger[aria-expanded="true"] {
  position: absolute;
  top: 1.5rem;
  left: 1rem;
  z-index: 2000;
  background-image: url("./images/icon-close.svg");
}

.primary-navigation {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: fixed;
  inset: 0;
  right: 30%;
  z-index: 1000;
  background-color: var(--surface2);
  list-style: none;
  /* min() function choose the less value and apply it */
  padding: min(10rem, 20vh) 2rem;
  margin: 0;
  transform: translateX(-100%);
  transition: transform 500ms ease-in-out;
}

.primary-navigation[data-visible="true"] {
  transform: translateX(0);
}

.primary-navigation a {
  text-decoration: none;
  color: var(--text1);
  font-weight: 700;
}

.logo {
  flex: 1;
}

.profile {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.cart {
  display: block;
  position: relative;
}

.cart-items-count {
  display: inline-block;
  width: 1rem;
  background-color: var(--orange);
  color: var(--white);
  font-weight: 700;
  border-radius: 100px;
  font-size: 0.5rem;
  position: absolute;
  top: -25%;
  right: 0;
  pointer-events: none;
}

.profile-image {
  width: 1.75rem;
}

/* ###############  */

.product-image {
  position: relative;
}

.carousel {
  display: flex;
  overflow-x: auto;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  -ms-overflow-style: none; /* for Internet Explorer, Edge */
  scrollbar-width: none; /* for Firefox */
}

.carousel::-webkit-scrollbar {
  display: none; /* for Chrome, Safari, and Opera */
}

.carousel img {
  aspect-ratio: 4 / 3.2;
  object-fit: cover;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

.thumbnails {
  display: none;
}

:where(.previous, .next) {
  display: grid;
  place-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 2.5rem;
  aspect-ratio: 1;
  background-color: var(--white);
  border: 0;
  border-radius: 50%;
}

:where(.previous, .next):where(:hover, :focus) {
  cursor: pointer;
  opacity: 0.8;
}

:where(.previous, .next) img {
  width: 0.65rem;
  aspect-ratio: 1.5 / 2;
}

.previous {
  left: 1rem;
}
.next {
  right: 1rem;
}

.product-description {
  padding: 1.5rem;
  display: grid;
  gap: 1rem;
}

.company-name {
  text-transform: uppercase;
  font-weight: 700;
  color: var(--brand);
  font-size: 0.9rem;
  letter-spacing: 1px;
}

.product-title {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1;
}

.product-price {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.price {
  font-size: 2rem;
  font-weight: 700;
}

.sale {
  color: var(--brand);
  font-weight: 700;
  background-color: var(--pale-orange);
  padding: 0.1rem 0.5rem;
  border-radius: 8px;
}

.no-price {
  flex: 1;
  text-align: end;
  font-size: 1.1rem;
  font-weight: 700;
  color: var(--grayish-blue);
  text-decoration: line-through;
}

.counter-add-to-cart {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

:where(.decrease, .increase) {
  padding: 0.5rem;
}

.counter {
  background-color: var(--surface4);
  padding: 1rem;
  display: flex;
  align-items: center;
  border-radius: 8px;
}

.number {
  flex: 1;
  text-align: center;
  font-weight: 700;
}

.add-to-cart,
.checkout {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  border: 0;
  background-color: var(--orange);
  border-radius: 8px;
  color: var(--white);
}

.add-to-cart span {
  display: grid;
  place-items: center;
}

.cart-dialog {
  min-width: calc(100% - 2rem);
  aspect-ratio: 2 / 1.5;
  margin-inline: auto;
  position: absolute;
  top: 90px;
  right: 1rem;
  background-color: var(--surface2);
  border-radius: 10px;
  z-index: 10;
  display: none;
}
.cart-dialog.show {
  display: block;
}

.cart-header {
  /* border: 1px solid red; */
  border-bottom: 0.5px solid var(--surface4);
}

.cart-title {
  font-size: 1.2rem;
  color: var(--text2);
  padding: 1rem 1.5rem;
}

.cart-body {
  display: grid;
  gap: 1.5rem;
  padding: 1.5rem;
}

.added-items {
  display: grid;
  gap: 1rem;
}

.item {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 1rem;
}

.item > * {
  /* outline: 1px solid green; */
}

.item-thumbnail {
  width: 3rem;
  border-radius: 4px;
  overflow: hidden;
}

.item-details > * {
  color: var(--text2);
}
.item-details > p {
  width: 150px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.item-total {
  font-weight: 700;
}
.item-del,
.cart {
  border: 0;
  background: none;
}
